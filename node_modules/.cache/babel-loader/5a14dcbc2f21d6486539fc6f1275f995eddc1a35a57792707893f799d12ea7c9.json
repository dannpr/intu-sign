{"ast":null,"code":"var _jsxFileName = \"/Users/macdann/Desktop/POLYBLOCKS/Project/W3/Dev/INTU-sign/src/App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { SignClient } from \"@walletconnect/sign-client\";\nimport { Web3Modal } from \"@web3modal/standalone\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3Modal = new Web3Modal({\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  standaloneChains: [\"eip155:5\"]\n});\nfunction App() {\n  _s();\n  const [signClient, setSignClient] = useState();\n  async function createClient() {\n    try {\n      const client = await SignClient.init({\n        projectId: process.env.REACT_APP_PROJECT_ID\n      });\n      console.log(client);\n      setSignClient(client);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async function handleconnect() {\n    if (!signClient) throw Error(\"cannot connect, signClient is not defined\");\n    try {\n      // wotkflow of the dapp to connect to the wallet\n      // 1. dapp is going to send a proposal namespace ( asking for permission to do things with the wallet and listen to their event)\n      const proposalNamespace = {\n        eip155: {\n          chains: [\"eip155:5\"],\n          methods: [\"eth_sendTransaction\"],\n          events: [\"connect\", \"disconnect\"]\n        }\n      };\n      const {\n        uri,\n        approval\n      } = await signClient.connect({\n        requiredNamespaces: proposalNamespace\n      });\n      console.log('uri', uri);\n\n      // 2. open web3 modal that will be our portal\n      if (uri) {\n        web3Modal.openModal({\n          uri\n        });\n        const sessionNamespace = await approval();\n        console.log(\"sessionNamespace\", sessionNamespace);\n      }\n\n      // 2.1 create a wallet that already integrated signV2 so we need to do the integration with our wallet\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  useEffect(() => {\n    if (!signClient) {\n      createClient();\n    }\n  }, [signClient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" INTU-nnexion \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleconnect,\n      disable: !signClient,\n      children: \" Connect \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i4FycsS3SiXML6luk4ao9It2VlE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SignClient","Web3Modal","web3Modal","projectId","process","env","REACT_APP_PROJECT_ID","standaloneChains","App","signClient","setSignClient","createClient","client","init","console","log","e","handleconnect","Error","proposalNamespace","eip155","chains","methods","events","uri","approval","connect","requiredNamespaces","openModal","sessionNamespace"],"sources":["/Users/macdann/Desktop/POLYBLOCKS/Project/W3/Dev/INTU-sign/src/App.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { SignClient } from \"@walletconnect/sign-client\";\nimport { Web3Modal } from \"@web3modal/standalone\";\nimport './App.css';\n\nconst web3Modal = new Web3Modal({\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  standaloneChains: [\"eip155:5\"]\n});\n\nfunction App() {\n  const [signClient, setSignClient] = useState();\n\n  async function createClient() {\n    try {\n      const client = await SignClient.init({\n        projectId: process.env.REACT_APP_PROJECT_ID,\n      })\n      console.log(client);\n      setSignClient(client);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function handleconnect() {\n    if (!signClient) throw Error(\"cannot connect, signClient is not defined\")\n    try {\n      // wotkflow of the dapp to connect to the wallet\n      // 1. dapp is going to send a proposal namespace ( asking for permission to do things with the wallet and listen to their event)\n      const proposalNamespace = {\n        eip155: {\n          chains: [\"eip155:5\"],\n          methods: [\"eth_sendTransaction\"],\n          events: [\"connect\", \"disconnect\"]\n        }\n      };\n\n      const { uri, approval } = await signClient.connect({\n        requiredNamespaces: proposalNamespace\n      });\n\n      console.log('uri', uri);\n\n      // 2. open web3 modal that will be our portal\n      if (uri) {\n        web3Modal.openModal({ uri })\n        const sessionNamespace = await approval();\n        console.log(\"sessionNamespace\", sessionNamespace)\n        \n      }\n\n      // 2.1 create a wallet that already integrated signV2 so we need to do the integration with our wallet\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  useEffect(() => {\n    if (!signClient) {\n      createClient();\n    }\n  }, [signClient]);\n\n  return (\n    <div className=\"App\">\n      <h1> INTU-nnexion </h1>\n      <button onClick={handleconnect} disable={!signClient}> Connect </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAO,WAAW;AAAC;AAEnB,MAAMC,SAAS,GAAG,IAAID,SAAS,CAAC;EAC9BE,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAC3CC,gBAAgB,EAAE,CAAC,UAAU;AAC/B,CAAC,CAAC;AAEF,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,EAAE;EAE9C,eAAeY,YAAY,GAAG;IAC5B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMZ,UAAU,CAACa,IAAI,CAAC;QACnCV,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC;MACzB,CAAC,CAAC;MACFQ,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBF,aAAa,CAACE,MAAM,CAAC;IACvB,CAAC,CAAC,OAAOI,CAAC,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;IAChB;EACF;EAEA,eAAeC,aAAa,GAAG;IAC7B,IAAI,CAACR,UAAU,EAAE,MAAMS,KAAK,CAAC,2CAA2C,CAAC;IACzE,IAAI;MACF;MACA;MACA,MAAMC,iBAAiB,GAAG;QACxBC,MAAM,EAAE;UACNC,MAAM,EAAE,CAAC,UAAU,CAAC;UACpBC,OAAO,EAAE,CAAC,qBAAqB,CAAC;UAChCC,MAAM,EAAE,CAAC,SAAS,EAAE,YAAY;QAClC;MACF,CAAC;MAED,MAAM;QAAEC,GAAG;QAAEC;MAAS,CAAC,GAAG,MAAMhB,UAAU,CAACiB,OAAO,CAAC;QACjDC,kBAAkB,EAAER;MACtB,CAAC,CAAC;MAEFL,OAAO,CAACC,GAAG,CAAC,KAAK,EAAES,GAAG,CAAC;;MAEvB;MACA,IAAIA,GAAG,EAAE;QACPtB,SAAS,CAAC0B,SAAS,CAAC;UAAEJ;QAAI,CAAC,CAAC;QAC5B,MAAMK,gBAAgB,GAAG,MAAMJ,QAAQ,EAAE;QACzCX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,gBAAgB,CAAC;MAEnD;;MAEA;IACF,CAAC,CAAC,OAAOb,CAAC,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;IAChB;EACF;EACAlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,UAAU,EAAE;MACfE,YAAY,EAAE;IAChB;EACF,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAQ,OAAO,EAAEQ,aAAc;MAAC,OAAO,EAAE,CAACR,UAAW;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpE;AAEV;AAAC,GA3DQD,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}